name: Build and Publish to Registry

on: [push]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: testing    # Add your cluster name here.
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, and Publish
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - name: Setup gcloud CLI
        id: setup_gcloud
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Notify Slack on setup success or failure
      - name: Notify Slack on setup
        if: ${{ always() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Step 1 - Setup gcloud CLI",
              "attachments": [
                {
                  "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
                  "text": "${{ job.status == 'success' && '✅' || '❌' }} Setup gcloud CLI ${{ job.status == 'success' && 'succeeded' || 'failed' }}"
                }
              ]
            }

      # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
      - name: Configure Docker
        run: |-
          gcloud --quiet auth configure-docker

      # Notify Slack on Docker configuration success or failure
      - name: Notify Slack on Docker configuration
        if: ${{ always() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Step 2 - Configure Docker",
              "attachments": [
                {
                  "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
                  "text": "${{ job.status == 'success' && '✅' || '❌' }} Configure Docker ${{ job.status == 'success' && 'succeeded' || 'failed' }}"
                }
              ]
            }
